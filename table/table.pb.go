// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.12.3
// source: table.proto

package tcaplusservice

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// 通用KV存储 用来存储杂项
type TbKeyValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tag   uint32 `protobuf:"varint,1,opt,name=tag,proto3" json:"tag,omitempty"`
	Key   string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Value []byte `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	Addr  uint64 `protobuf:"varint,4,opt,name=addr,proto3" json:"addr,omitempty"`
	Time  uint64 `protobuf:"varint,5,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *TbKeyValue) Reset() {
	*x = TbKeyValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_table_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TbKeyValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TbKeyValue) ProtoMessage() {}

func (x *TbKeyValue) ProtoReflect() protoreflect.Message {
	mi := &file_table_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TbKeyValue.ProtoReflect.Descriptor instead.
func (*TbKeyValue) Descriptor() ([]byte, []int) {
	return file_table_proto_rawDescGZIP(), []int{0}
}

func (x *TbKeyValue) GetTag() uint32 {
	if x != nil {
		return x.Tag
	}
	return 0
}

func (x *TbKeyValue) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *TbKeyValue) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *TbKeyValue) GetAddr() uint64 {
	if x != nil {
		return x.Addr
	}
	return 0
}

func (x *TbKeyValue) GetTime() uint64 {
	if x != nil {
		return x.Time
	}
	return 0
}

// 玩家数据表
type TbPlayer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint64            `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	InstId    uint64            `protobuf:"varint,2,opt,name=inst_id,json=instId,proto3" json:"inst_id,omitempty"`
	Timestamp int64             `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	State     int32             `protobuf:"varint,4,opt,name=state,proto3" json:"state,omitempty"`
	Data      map[string][]byte `protobuf:"bytes,5,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *TbPlayer) Reset() {
	*x = TbPlayer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_table_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TbPlayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TbPlayer) ProtoMessage() {}

func (x *TbPlayer) ProtoReflect() protoreflect.Message {
	mi := &file_table_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TbPlayer.ProtoReflect.Descriptor instead.
func (*TbPlayer) Descriptor() ([]byte, []int) {
	return file_table_proto_rawDescGZIP(), []int{1}
}

func (x *TbPlayer) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TbPlayer) GetInstId() uint64 {
	if x != nil {
		return x.InstId
	}
	return 0
}

func (x *TbPlayer) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *TbPlayer) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *TbPlayer) GetData() map[string][]byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// 帐号在线数据
type TbAccountOnline struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid            uint64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Guid           uint64 `protobuf:"varint,2,opt,name=guid,proto3" json:"guid,omitempty"`
	LobbyServerIns uint64 `protobuf:"varint,3,opt,name=lobby_server_ins,json=lobbyServerIns,proto3" json:"lobby_server_ins,omitempty"`
	Timestamp      int64  `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Ban            int32  `protobuf:"varint,5,opt,name=ban,proto3" json:"ban,omitempty"`
	BanReasonStr   string `protobuf:"bytes,6,opt,name=ban_reason_str,json=banReasonStr,proto3" json:"ban_reason_str,omitempty"`
	BanTime        uint32 `protobuf:"varint,7,opt,name=ban_time,json=banTime,proto3" json:"ban_time,omitempty"`
	Openid         string `protobuf:"bytes,8,opt,name=openid,proto3" json:"openid,omitempty"`
}

func (x *TbAccountOnline) Reset() {
	*x = TbAccountOnline{}
	if protoimpl.UnsafeEnabled {
		mi := &file_table_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TbAccountOnline) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TbAccountOnline) ProtoMessage() {}

func (x *TbAccountOnline) ProtoReflect() protoreflect.Message {
	mi := &file_table_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TbAccountOnline.ProtoReflect.Descriptor instead.
func (*TbAccountOnline) Descriptor() ([]byte, []int) {
	return file_table_proto_rawDescGZIP(), []int{2}
}

func (x *TbAccountOnline) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *TbAccountOnline) GetGuid() uint64 {
	if x != nil {
		return x.Guid
	}
	return 0
}

func (x *TbAccountOnline) GetLobbyServerIns() uint64 {
	if x != nil {
		return x.LobbyServerIns
	}
	return 0
}

func (x *TbAccountOnline) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *TbAccountOnline) GetBan() int32 {
	if x != nil {
		return x.Ban
	}
	return 0
}

func (x *TbAccountOnline) GetBanReasonStr() string {
	if x != nil {
		return x.BanReasonStr
	}
	return ""
}

func (x *TbAccountOnline) GetBanTime() uint32 {
	if x != nil {
		return x.BanTime
	}
	return 0
}

func (x *TbAccountOnline) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

// 角色在线数据
type TbRoleOnline struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Guid           uint64 `protobuf:"varint,1,opt,name=guid,proto3" json:"guid,omitempty"`
	LobbyServerIns uint64 `protobuf:"varint,2,opt,name=lobby_server_ins,json=lobbyServerIns,proto3" json:"lobby_server_ins,omitempty"`
	Timestamp      int64  `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *TbRoleOnline) Reset() {
	*x = TbRoleOnline{}
	if protoimpl.UnsafeEnabled {
		mi := &file_table_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TbRoleOnline) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TbRoleOnline) ProtoMessage() {}

func (x *TbRoleOnline) ProtoReflect() protoreflect.Message {
	mi := &file_table_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TbRoleOnline.ProtoReflect.Descriptor instead.
func (*TbRoleOnline) Descriptor() ([]byte, []int) {
	return file_table_proto_rawDescGZIP(), []int{3}
}

func (x *TbRoleOnline) GetGuid() uint64 {
	if x != nil {
		return x.Guid
	}
	return 0
}

func (x *TbRoleOnline) GetLobbyServerIns() uint64 {
	if x != nil {
		return x.LobbyServerIns
	}
	return 0
}

func (x *TbRoleOnline) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// 玩家帐号信息
type TbOpenid struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key  string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *TbOpenid) Reset() {
	*x = TbOpenid{}
	if protoimpl.UnsafeEnabled {
		mi := &file_table_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TbOpenid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TbOpenid) ProtoMessage() {}

func (x *TbOpenid) ProtoReflect() protoreflect.Message {
	mi := &file_table_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TbOpenid.ProtoReflect.Descriptor instead.
func (*TbOpenid) Descriptor() ([]byte, []int) {
	return file_table_proto_rawDescGZIP(), []int{4}
}

func (x *TbOpenid) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *TbOpenid) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// 角色简要信息
type TbRoleBriefInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Guid uint64 `protobuf:"varint,1,opt,name=guid,proto3" json:"guid,omitempty"`
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *TbRoleBriefInfo) Reset() {
	*x = TbRoleBriefInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_table_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TbRoleBriefInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TbRoleBriefInfo) ProtoMessage() {}

func (x *TbRoleBriefInfo) ProtoReflect() protoreflect.Message {
	mi := &file_table_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TbRoleBriefInfo.ProtoReflect.Descriptor instead.
func (*TbRoleBriefInfo) Descriptor() ([]byte, []int) {
	return file_table_proto_rawDescGZIP(), []int{5}
}

func (x *TbRoleBriefInfo) GetGuid() uint64 {
	if x != nil {
		return x.Guid
	}
	return 0
}

func (x *TbRoleBriefInfo) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// 玩家昵称
type TbGamename struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Gamename string `protobuf:"bytes,1,opt,name=gamename,proto3" json:"gamename,omitempty"`
	Guid     uint64 `protobuf:"varint,2,opt,name=guid,proto3" json:"guid,omitempty"`
}

func (x *TbGamename) Reset() {
	*x = TbGamename{}
	if protoimpl.UnsafeEnabled {
		mi := &file_table_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TbGamename) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TbGamename) ProtoMessage() {}

func (x *TbGamename) ProtoReflect() protoreflect.Message {
	mi := &file_table_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TbGamename.ProtoReflect.Descriptor instead.
func (*TbGamename) Descriptor() ([]byte, []int) {
	return file_table_proto_rawDescGZIP(), []int{6}
}

func (x *TbGamename) GetGamename() string {
	if x != nil {
		return x.Gamename
	}
	return ""
}

func (x *TbGamename) GetGuid() uint64 {
	if x != nil {
		return x.Guid
	}
	return 0
}

// 在线统计表
type TbRoleOnlineCnt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeKey          uint32 `protobuf:"varint,1,opt,name=time_key,json=timeKey,proto3" json:"time_key,omitempty"` // 时间点
	GameAppid        string `protobuf:"bytes,2,opt,name=game_appid,json=gameAppid,proto3" json:"game_appid,omitempty"`
	Gsid             string `protobuf:"bytes,3,opt,name=gsid,proto3" json:"gsid,omitempty"`
	WorldId          string `protobuf:"bytes,4,opt,name=world_id,json=worldId,proto3" json:"world_id,omitempty"`
	OnlineCntIos     uint32 `protobuf:"varint,5,opt,name=online_cnt_ios,json=onlineCntIos,proto3" json:"online_cnt_ios,omitempty"`             // ISO在线人数
	OnlineCntAndroid uint32 `protobuf:"varint,6,opt,name=online_cnt_android,json=onlineCntAndroid,proto3" json:"online_cnt_android,omitempty"` // android在线人数
	RegisterNum      uint32 `protobuf:"varint,7,opt,name=register_num,json=registerNum,proto3" json:"register_num,omitempty"`                  // 注册人数
}

func (x *TbRoleOnlineCnt) Reset() {
	*x = TbRoleOnlineCnt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_table_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TbRoleOnlineCnt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TbRoleOnlineCnt) ProtoMessage() {}

func (x *TbRoleOnlineCnt) ProtoReflect() protoreflect.Message {
	mi := &file_table_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TbRoleOnlineCnt.ProtoReflect.Descriptor instead.
func (*TbRoleOnlineCnt) Descriptor() ([]byte, []int) {
	return file_table_proto_rawDescGZIP(), []int{7}
}

func (x *TbRoleOnlineCnt) GetTimeKey() uint32 {
	if x != nil {
		return x.TimeKey
	}
	return 0
}

func (x *TbRoleOnlineCnt) GetGameAppid() string {
	if x != nil {
		return x.GameAppid
	}
	return ""
}

func (x *TbRoleOnlineCnt) GetGsid() string {
	if x != nil {
		return x.Gsid
	}
	return ""
}

func (x *TbRoleOnlineCnt) GetWorldId() string {
	if x != nil {
		return x.WorldId
	}
	return ""
}

func (x *TbRoleOnlineCnt) GetOnlineCntIos() uint32 {
	if x != nil {
		return x.OnlineCntIos
	}
	return 0
}

func (x *TbRoleOnlineCnt) GetOnlineCntAndroid() uint32 {
	if x != nil {
		return x.OnlineCntAndroid
	}
	return 0
}

func (x *TbRoleOnlineCnt) GetRegisterNum() uint32 {
	if x != nil {
		return x.RegisterNum
	}
	return 0
}

// 白名单
type TbWhiteList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Openid string `protobuf:"bytes,1,opt,name=openid,proto3" json:"openid,omitempty"`
	Level  int32  `protobuf:"varint,2,opt,name=level,proto3" json:"level,omitempty"` // 白名单等级
}

func (x *TbWhiteList) Reset() {
	*x = TbWhiteList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_table_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TbWhiteList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TbWhiteList) ProtoMessage() {}

func (x *TbWhiteList) ProtoReflect() protoreflect.Message {
	mi := &file_table_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TbWhiteList.ProtoReflect.Descriptor instead.
func (*TbWhiteList) Descriptor() ([]byte, []int) {
	return file_table_proto_rawDescGZIP(), []int{8}
}

func (x *TbWhiteList) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

func (x *TbWhiteList) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

// DB生成全局ID
type TbGlobalId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type        uint32 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	IdGenerator uint64 `protobuf:"varint,2,opt,name=id_generator,json=idGenerator,proto3" json:"id_generator,omitempty"`
}

func (x *TbGlobalId) Reset() {
	*x = TbGlobalId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_table_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TbGlobalId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TbGlobalId) ProtoMessage() {}

func (x *TbGlobalId) ProtoReflect() protoreflect.Message {
	mi := &file_table_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TbGlobalId.ProtoReflect.Descriptor instead.
func (*TbGlobalId) Descriptor() ([]byte, []int) {
	return file_table_proto_rawDescGZIP(), []int{9}
}

func (x *TbGlobalId) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *TbGlobalId) GetIdGenerator() uint64 {
	if x != nil {
		return x.IdGenerator
	}
	return 0
}

// 注册限制为了pr测试时，key=0表示全区的限制，key> 0表示每天的限制
type TbRegCnt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key    uint32 `protobuf:"varint,1,opt,name=key,proto3" json:"key,omitempty"`                     //0表示总注册人数，其它表示按天
	RegCnt uint64 `protobuf:"varint,2,opt,name=reg_cnt,json=regCnt,proto3" json:"reg_cnt,omitempty"` //总注册人数
}

func (x *TbRegCnt) Reset() {
	*x = TbRegCnt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_table_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TbRegCnt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TbRegCnt) ProtoMessage() {}

func (x *TbRegCnt) ProtoReflect() protoreflect.Message {
	mi := &file_table_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TbRegCnt.ProtoReflect.Descriptor instead.
func (*TbRegCnt) Descriptor() ([]byte, []int) {
	return file_table_proto_rawDescGZIP(), []int{10}
}

func (x *TbRegCnt) GetKey() uint32 {
	if x != nil {
		return x.Key
	}
	return 0
}

func (x *TbRegCnt) GetRegCnt() uint64 {
	if x != nil {
		return x.RegCnt
	}
	return 0
}

// 主要是为了解决bug的及时回写表
type TbRoleExt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Guid uint64 `protobuf:"varint,1,opt,name=guid,proto3" json:"guid,omitempty"`
	Tag  string `protobuf:"bytes,2,opt,name=tag,proto3" json:"tag,omitempty"`
	Data []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *TbRoleExt) Reset() {
	*x = TbRoleExt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_table_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TbRoleExt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TbRoleExt) ProtoMessage() {}

func (x *TbRoleExt) ProtoReflect() protoreflect.Message {
	mi := &file_table_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TbRoleExt.ProtoReflect.Descriptor instead.
func (*TbRoleExt) Descriptor() ([]byte, []int) {
	return file_table_proto_rawDescGZIP(), []int{11}
}

func (x *TbRoleExt) GetGuid() uint64 {
	if x != nil {
		return x.Guid
	}
	return 0
}

func (x *TbRoleExt) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *TbRoleExt) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// 邮件补偿
type TbMailCompensation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Guid uint64 `protobuf:"varint,1,opt,name=guid,proto3" json:"guid,omitempty"`
	Type uint64 `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"` // MailConf里的邮件id
	Data string `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`  // 附件, text格式的附件内容
}

func (x *TbMailCompensation) Reset() {
	*x = TbMailCompensation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_table_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TbMailCompensation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TbMailCompensation) ProtoMessage() {}

func (x *TbMailCompensation) ProtoReflect() protoreflect.Message {
	mi := &file_table_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TbMailCompensation.ProtoReflect.Descriptor instead.
func (*TbMailCompensation) Descriptor() ([]byte, []int) {
	return file_table_proto_rawDescGZIP(), []int{12}
}

func (x *TbMailCompensation) GetGuid() uint64 {
	if x != nil {
		return x.Guid
	}
	return 0
}

func (x *TbMailCompensation) GetType() uint64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *TbMailCompensation) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

// 活动通用存储
type TbActivity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Guid        uint64 `protobuf:"varint,1,opt,name=guid,proto3" json:"guid,omitempty"`
	ActivityId  uint32 `protobuf:"varint,2,opt,name=activity_id,json=activityId,proto3" json:"activity_id,omitempty"`
	ProtoType   string `protobuf:"bytes,3,opt,name=proto_type,json=protoType,proto3" json:"proto_type,omitempty"`        // 所存数据的类型
	Data        []byte `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`                                   // 活动数据
	Time        uint64 `protobuf:"varint,5,opt,name=time,proto3" json:"time,omitempty"`                                  // 更新时间
	ConfVersion uint32 `protobuf:"varint,6,opt,name=conf_version,json=confVersion,proto3" json:"conf_version,omitempty"` // 配置版本号
}

func (x *TbActivity) Reset() {
	*x = TbActivity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_table_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TbActivity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TbActivity) ProtoMessage() {}

func (x *TbActivity) ProtoReflect() protoreflect.Message {
	mi := &file_table_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TbActivity.ProtoReflect.Descriptor instead.
func (*TbActivity) Descriptor() ([]byte, []int) {
	return file_table_proto_rawDescGZIP(), []int{13}
}

func (x *TbActivity) GetGuid() uint64 {
	if x != nil {
		return x.Guid
	}
	return 0
}

func (x *TbActivity) GetActivityId() uint32 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

func (x *TbActivity) GetProtoType() string {
	if x != nil {
		return x.ProtoType
	}
	return ""
}

func (x *TbActivity) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *TbActivity) GetTime() uint64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *TbActivity) GetConfVersion() uint32 {
	if x != nil {
		return x.ConfVersion
	}
	return 0
}

// 最后一局比赛的结算包
type TbLastGameResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Guid   uint64 `protobuf:"varint,1,opt,name=guid,proto3" json:"guid,omitempty"`
	GameId uint64 `protobuf:"varint,2,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	Data   []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *TbLastGameResult) Reset() {
	*x = TbLastGameResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_table_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TbLastGameResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TbLastGameResult) ProtoMessage() {}

func (x *TbLastGameResult) ProtoReflect() protoreflect.Message {
	mi := &file_table_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TbLastGameResult.ProtoReflect.Descriptor instead.
func (*TbLastGameResult) Descriptor() ([]byte, []int) {
	return file_table_proto_rawDescGZIP(), []int{14}
}

func (x *TbLastGameResult) GetGuid() uint64 {
	if x != nil {
		return x.Guid
	}
	return 0
}

func (x *TbLastGameResult) GetGameId() uint64 {
	if x != nil {
		return x.GameId
	}
	return 0
}

func (x *TbLastGameResult) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// 最后一局比赛的任务奖励包
type TbLastGameTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Guid   uint64 `protobuf:"varint,1,opt,name=guid,proto3" json:"guid,omitempty"`
	GameId uint64 `protobuf:"varint,2,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	Data   []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *TbLastGameTask) Reset() {
	*x = TbLastGameTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_table_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TbLastGameTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TbLastGameTask) ProtoMessage() {}

func (x *TbLastGameTask) ProtoReflect() protoreflect.Message {
	mi := &file_table_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TbLastGameTask.ProtoReflect.Descriptor instead.
func (*TbLastGameTask) Descriptor() ([]byte, []int) {
	return file_table_proto_rawDescGZIP(), []int{15}
}

func (x *TbLastGameTask) GetGuid() uint64 {
	if x != nil {
		return x.Guid
	}
	return 0
}

func (x *TbLastGameTask) GetGameId() uint64 {
	if x != nil {
		return x.GameId
	}
	return 0
}

func (x *TbLastGameTask) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// 角色统计数据
type TbPlayerStatistic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Guid         uint64 `protobuf:"varint,1,opt,name=guid,proto3" json:"guid,omitempty"`
	Data         []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	RegisterTime int64  `protobuf:"varint,3,opt,name=register_time,json=registerTime,proto3" json:"register_time,omitempty"`
}

func (x *TbPlayerStatistic) Reset() {
	*x = TbPlayerStatistic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_table_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TbPlayerStatistic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TbPlayerStatistic) ProtoMessage() {}

func (x *TbPlayerStatistic) ProtoReflect() protoreflect.Message {
	mi := &file_table_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TbPlayerStatistic.ProtoReflect.Descriptor instead.
func (*TbPlayerStatistic) Descriptor() ([]byte, []int) {
	return file_table_proto_rawDescGZIP(), []int{16}
}

func (x *TbPlayerStatistic) GetGuid() uint64 {
	if x != nil {
		return x.Guid
	}
	return 0
}

func (x *TbPlayerStatistic) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *TbPlayerStatistic) GetRegisterTime() int64 {
	if x != nil {
		return x.RegisterTime
	}
	return 0
}

// group数据
type TbGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	InstId    uint64 `protobuf:"varint,2,opt,name=inst_id,json=instId,proto3" json:"inst_id,omitempty"`
	Timestamp int64  `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	State     int32  `protobuf:"varint,4,opt,name=state,proto3" json:"state,omitempty"`
	Data      []byte `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *TbGroup) Reset() {
	*x = TbGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_table_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TbGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TbGroup) ProtoMessage() {}

func (x *TbGroup) ProtoReflect() protoreflect.Message {
	mi := &file_table_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TbGroup.ProtoReflect.Descriptor instead.
func (*TbGroup) Descriptor() ([]byte, []int) {
	return file_table_proto_rawDescGZIP(), []int{17}
}

func (x *TbGroup) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TbGroup) GetInstId() uint64 {
	if x != nil {
		return x.InstId
	}
	return 0
}

func (x *TbGroup) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *TbGroup) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *TbGroup) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// room数据
type TbRoom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	InstId    uint64 `protobuf:"varint,2,opt,name=inst_id,json=instId,proto3" json:"inst_id,omitempty"`
	Timestamp int64  `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	State     int32  `protobuf:"varint,4,opt,name=state,proto3" json:"state,omitempty"`
	Data      []byte `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *TbRoom) Reset() {
	*x = TbRoom{}
	if protoimpl.UnsafeEnabled {
		mi := &file_table_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TbRoom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TbRoom) ProtoMessage() {}

func (x *TbRoom) ProtoReflect() protoreflect.Message {
	mi := &file_table_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TbRoom.ProtoReflect.Descriptor instead.
func (*TbRoom) Descriptor() ([]byte, []int) {
	return file_table_proto_rawDescGZIP(), []int{18}
}

func (x *TbRoom) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TbRoom) GetInstId() uint64 {
	if x != nil {
		return x.InstId
	}
	return 0
}

func (x *TbRoom) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *TbRoom) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *TbRoom) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// 聊天
type TbChatList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Guid uint64 `protobuf:"varint,1,opt,name=guid,proto3" json:"guid,omitempty"`
	Fuid uint64 `protobuf:"varint,2,opt,name=fuid,proto3" json:"fuid,omitempty"`
	Data []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *TbChatList) Reset() {
	*x = TbChatList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_table_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TbChatList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TbChatList) ProtoMessage() {}

func (x *TbChatList) ProtoReflect() protoreflect.Message {
	mi := &file_table_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TbChatList.ProtoReflect.Descriptor instead.
func (*TbChatList) Descriptor() ([]byte, []int) {
	return file_table_proto_rawDescGZIP(), []int{19}
}

func (x *TbChatList) GetGuid() uint64 {
	if x != nil {
		return x.Guid
	}
	return 0
}

func (x *TbChatList) GetFuid() uint64 {
	if x != nil {
		return x.Fuid
	}
	return 0
}

func (x *TbChatList) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// 角色好友信息
type TbFriendList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Guid uint64 `protobuf:"varint,1,opt,name=guid,proto3" json:"guid,omitempty"`
	Type int32  `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"` // 类型:1-平台好友,2-游戏好友,3-好友申请,4-黑名单,5-被黑名单
	Fuid uint64 `protobuf:"varint,3,opt,name=fuid,proto3" json:"fuid,omitempty"`
	Data []byte `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *TbFriendList) Reset() {
	*x = TbFriendList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_table_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TbFriendList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TbFriendList) ProtoMessage() {}

func (x *TbFriendList) ProtoReflect() protoreflect.Message {
	mi := &file_table_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TbFriendList.ProtoReflect.Descriptor instead.
func (*TbFriendList) Descriptor() ([]byte, []int) {
	return file_table_proto_rawDescGZIP(), []int{20}
}

func (x *TbFriendList) GetGuid() uint64 {
	if x != nil {
		return x.Guid
	}
	return 0
}

func (x *TbFriendList) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *TbFriendList) GetFuid() uint64 {
	if x != nil {
		return x.Fuid
	}
	return 0
}

func (x *TbFriendList) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// 角色邮件信息
type TbMailList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Guid uint64 `protobuf:"varint,1,opt,name=guid,proto3" json:"guid,omitempty"`
	Type int32  `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"` // 类型:1-赠送金币,2-礼物,3-请求,4-赠送,5-感谢,6-系统邮件
	Data []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *TbMailList) Reset() {
	*x = TbMailList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_table_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TbMailList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TbMailList) ProtoMessage() {}

func (x *TbMailList) ProtoReflect() protoreflect.Message {
	mi := &file_table_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TbMailList.ProtoReflect.Descriptor instead.
func (*TbMailList) Descriptor() ([]byte, []int) {
	return file_table_proto_rawDescGZIP(), []int{21}
}

func (x *TbMailList) GetGuid() uint64 {
	if x != nil {
		return x.Guid
	}
	return 0
}

func (x *TbMailList) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *TbMailList) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// 玩家订单数据
type TbPlayerOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Guid    uint64 `protobuf:"varint,1,opt,name=guid,proto3" json:"guid,omitempty"`
	OrderId uint64 `protobuf:"varint,2,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	Data    []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *TbPlayerOrder) Reset() {
	*x = TbPlayerOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_table_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TbPlayerOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TbPlayerOrder) ProtoMessage() {}

func (x *TbPlayerOrder) ProtoReflect() protoreflect.Message {
	mi := &file_table_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TbPlayerOrder.ProtoReflect.Descriptor instead.
func (*TbPlayerOrder) Descriptor() ([]byte, []int) {
	return file_table_proto_rawDescGZIP(), []int{22}
}

func (x *TbPlayerOrder) GetGuid() uint64 {
	if x != nil {
		return x.Guid
	}
	return 0
}

func (x *TbPlayerOrder) GetOrderId() uint64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *TbPlayerOrder) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// 历史战绩简要数据
type TbBattleRecordBrief struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Guid uint64 `protobuf:"varint,1,opt,name=guid,proto3" json:"guid,omitempty"`
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *TbBattleRecordBrief) Reset() {
	*x = TbBattleRecordBrief{}
	if protoimpl.UnsafeEnabled {
		mi := &file_table_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TbBattleRecordBrief) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TbBattleRecordBrief) ProtoMessage() {}

func (x *TbBattleRecordBrief) ProtoReflect() protoreflect.Message {
	mi := &file_table_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TbBattleRecordBrief.ProtoReflect.Descriptor instead.
func (*TbBattleRecordBrief) Descriptor() ([]byte, []int) {
	return file_table_proto_rawDescGZIP(), []int{23}
}

func (x *TbBattleRecordBrief) GetGuid() uint64 {
	if x != nil {
		return x.Guid
	}
	return 0
}

func (x *TbBattleRecordBrief) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// 历史战绩详细数据
type TbBattleRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Guid   uint64 `protobuf:"varint,1,opt,name=guid,proto3" json:"guid,omitempty"`
	GameId uint64 `protobuf:"varint,2,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	Data   []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *TbBattleRecord) Reset() {
	*x = TbBattleRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_table_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TbBattleRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TbBattleRecord) ProtoMessage() {}

func (x *TbBattleRecord) ProtoReflect() protoreflect.Message {
	mi := &file_table_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TbBattleRecord.ProtoReflect.Descriptor instead.
func (*TbBattleRecord) Descriptor() ([]byte, []int) {
	return file_table_proto_rawDescGZIP(), []int{24}
}

func (x *TbBattleRecord) GetGuid() uint64 {
	if x != nil {
		return x.Guid
	}
	return 0
}

func (x *TbBattleRecord) GetGameId() uint64 {
	if x != nil {
		return x.GameId
	}
	return 0
}

func (x *TbBattleRecord) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

//历史战绩回合信息
type TbBattleRoundRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameId  uint64 `protobuf:"varint,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	RoundId uint32 `protobuf:"varint,2,opt,name=round_id,json=roundId,proto3" json:"round_id,omitempty"`
	Data    []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *TbBattleRoundRecord) Reset() {
	*x = TbBattleRoundRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_table_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TbBattleRoundRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TbBattleRoundRecord) ProtoMessage() {}

func (x *TbBattleRoundRecord) ProtoReflect() protoreflect.Message {
	mi := &file_table_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TbBattleRoundRecord.ProtoReflect.Descriptor instead.
func (*TbBattleRoundRecord) Descriptor() ([]byte, []int) {
	return file_table_proto_rawDescGZIP(), []int{25}
}

func (x *TbBattleRoundRecord) GetGameId() uint64 {
	if x != nil {
		return x.GameId
	}
	return 0
}

func (x *TbBattleRoundRecord) GetRoundId() uint32 {
	if x != nil {
		return x.RoundId
	}
	return 0
}

func (x *TbBattleRoundRecord) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// 信誉分变化记录
type TbCreditRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Guid uint64 `protobuf:"varint,1,opt,name=guid,proto3" json:"guid,omitempty"`
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *TbCreditRecord) Reset() {
	*x = TbCreditRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_table_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TbCreditRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TbCreditRecord) ProtoMessage() {}

func (x *TbCreditRecord) ProtoReflect() protoreflect.Message {
	mi := &file_table_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TbCreditRecord.ProtoReflect.Descriptor instead.
func (*TbCreditRecord) Descriptor() ([]byte, []int) {
	return file_table_proto_rawDescGZIP(), []int{26}
}

func (x *TbCreditRecord) GetGuid() uint64 {
	if x != nil {
		return x.Guid
	}
	return 0
}

func (x *TbCreditRecord) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type TbReportCredit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Guid   uint64 `protobuf:"varint,1,opt,name=guid,proto3" json:"guid,omitempty"`
	GameId uint64 `protobuf:"varint,2,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	Data   []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *TbReportCredit) Reset() {
	*x = TbReportCredit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_table_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TbReportCredit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TbReportCredit) ProtoMessage() {}

func (x *TbReportCredit) ProtoReflect() protoreflect.Message {
	mi := &file_table_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TbReportCredit.ProtoReflect.Descriptor instead.
func (*TbReportCredit) Descriptor() ([]byte, []int) {
	return file_table_proto_rawDescGZIP(), []int{27}
}

func (x *TbReportCredit) GetGuid() uint64 {
	if x != nil {
		return x.Guid
	}
	return 0
}

func (x *TbReportCredit) GetGameId() uint64 {
	if x != nil {
		return x.GameId
	}
	return 0
}

func (x *TbReportCredit) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// 信誉等级经验变化记录
type TbCreditExpRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Guid uint64 `protobuf:"varint,1,opt,name=guid,proto3" json:"guid,omitempty"`
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *TbCreditExpRecord) Reset() {
	*x = TbCreditExpRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_table_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TbCreditExpRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TbCreditExpRecord) ProtoMessage() {}

func (x *TbCreditExpRecord) ProtoReflect() protoreflect.Message {
	mi := &file_table_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TbCreditExpRecord.ProtoReflect.Descriptor instead.
func (*TbCreditExpRecord) Descriptor() ([]byte, []int) {
	return file_table_proto_rawDescGZIP(), []int{28}
}

func (x *TbCreditExpRecord) GetGuid() uint64 {
	if x != nil {
		return x.Guid
	}
	return 0
}

func (x *TbCreditExpRecord) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type TbGuild struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//页面申请全局索引 match_index和score和leader_online
	Id           uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	MatchIndex   int32  `protobuf:"varint,2,opt,name=match_index,json=matchIndex,proto3" json:"match_index,omitempty"`
	Score        int32  `protobuf:"varint,3,opt,name=score,proto3" json:"score,omitempty"`
	LeaderOnline bool   `protobuf:"varint,4,opt,name=leader_online,json=leaderOnline,proto3" json:"leader_online,omitempty"`
	InstId       uint64 `protobuf:"varint,5,opt,name=inst_id,json=instId,proto3" json:"inst_id,omitempty"`
	Timestamp    int64  `protobuf:"varint,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	State        int32  `protobuf:"varint,7,opt,name=state,proto3" json:"state,omitempty"`
	Guildname    string `protobuf:"bytes,8,opt,name=guildname,proto3" json:"guildname,omitempty"`
	Data         []byte `protobuf:"bytes,9,opt,name=data,proto3" json:"data,omitempty"`
	MemberNum    int32  `protobuf:"varint,10,opt,name=member_num,json=memberNum,proto3" json:"member_num,omitempty"`
}

func (x *TbGuild) Reset() {
	*x = TbGuild{}
	if protoimpl.UnsafeEnabled {
		mi := &file_table_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TbGuild) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TbGuild) ProtoMessage() {}

func (x *TbGuild) ProtoReflect() protoreflect.Message {
	mi := &file_table_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TbGuild.ProtoReflect.Descriptor instead.
func (*TbGuild) Descriptor() ([]byte, []int) {
	return file_table_proto_rawDescGZIP(), []int{29}
}

func (x *TbGuild) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TbGuild) GetMatchIndex() int32 {
	if x != nil {
		return x.MatchIndex
	}
	return 0
}

func (x *TbGuild) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *TbGuild) GetLeaderOnline() bool {
	if x != nil {
		return x.LeaderOnline
	}
	return false
}

func (x *TbGuild) GetInstId() uint64 {
	if x != nil {
		return x.InstId
	}
	return 0
}

func (x *TbGuild) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *TbGuild) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *TbGuild) GetGuildname() string {
	if x != nil {
		return x.Guildname
	}
	return ""
}

func (x *TbGuild) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *TbGuild) GetMemberNum() int32 {
	if x != nil {
		return x.MemberNum
	}
	return 0
}

// 战队名称
type TbGuildname struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Guildname string `protobuf:"bytes,1,opt,name=guildname,proto3" json:"guildname,omitempty"`
	GuildId   uint64 `protobuf:"varint,2,opt,name=guild_id,json=guildId,proto3" json:"guild_id,omitempty"`
}

func (x *TbGuildname) Reset() {
	*x = TbGuildname{}
	if protoimpl.UnsafeEnabled {
		mi := &file_table_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TbGuildname) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TbGuildname) ProtoMessage() {}

func (x *TbGuildname) ProtoReflect() protoreflect.Message {
	mi := &file_table_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TbGuildname.ProtoReflect.Descriptor instead.
func (*TbGuildname) Descriptor() ([]byte, []int) {
	return file_table_proto_rawDescGZIP(), []int{30}
}

func (x *TbGuildname) GetGuildname() string {
	if x != nil {
		return x.Guildname
	}
	return ""
}

func (x *TbGuildname) GetGuildId() uint64 {
	if x != nil {
		return x.GuildId
	}
	return 0
}

// 战队数据:申请入队列表
type TbGuildApplyList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildId uint64 `protobuf:"varint,1,opt,name=guild_id,json=guildId,proto3" json:"guild_id,omitempty"`
	Guid    uint64 `protobuf:"varint,2,opt,name=guid,proto3" json:"guid,omitempty"` // 申请人uid
	Data    []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`  //申请人数据
}

func (x *TbGuildApplyList) Reset() {
	*x = TbGuildApplyList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_table_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TbGuildApplyList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TbGuildApplyList) ProtoMessage() {}

func (x *TbGuildApplyList) ProtoReflect() protoreflect.Message {
	mi := &file_table_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TbGuildApplyList.ProtoReflect.Descriptor instead.
func (*TbGuildApplyList) Descriptor() ([]byte, []int) {
	return file_table_proto_rawDescGZIP(), []int{31}
}

func (x *TbGuildApplyList) GetGuildId() uint64 {
	if x != nil {
		return x.GuildId
	}
	return 0
}

func (x *TbGuildApplyList) GetGuid() uint64 {
	if x != nil {
		return x.Guid
	}
	return 0
}

func (x *TbGuildApplyList) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// 个人数据:玩家被邀请列表
type TbPlayerGuildInviteList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Guid    uint64 `protobuf:"varint,1,opt,name=guid,proto3" json:"guid,omitempty"`
	GuildId uint64 `protobuf:"varint,2,opt,name=guild_id,json=guildId,proto3" json:"guild_id,omitempty"` // 邀请战队id
	Data    []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`                       //战队数据
}

func (x *TbPlayerGuildInviteList) Reset() {
	*x = TbPlayerGuildInviteList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_table_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TbPlayerGuildInviteList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TbPlayerGuildInviteList) ProtoMessage() {}

func (x *TbPlayerGuildInviteList) ProtoReflect() protoreflect.Message {
	mi := &file_table_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TbPlayerGuildInviteList.ProtoReflect.Descriptor instead.
func (*TbPlayerGuildInviteList) Descriptor() ([]byte, []int) {
	return file_table_proto_rawDescGZIP(), []int{32}
}

func (x *TbPlayerGuildInviteList) GetGuid() uint64 {
	if x != nil {
		return x.Guid
	}
	return 0
}

func (x *TbPlayerGuildInviteList) GetGuildId() uint64 {
	if x != nil {
		return x.GuildId
	}
	return 0
}

func (x *TbPlayerGuildInviteList) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// 个人数据:玩家拒绝战队列表
type TbPlayerGuildRefuseList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Guid    uint64 `protobuf:"varint,1,opt,name=guid,proto3" json:"guid,omitempty"`
	GuildId uint64 `protobuf:"varint,2,opt,name=guild_id,json=guildId,proto3" json:"guild_id,omitempty"` // 拒绝的战队id
	Utime   uint64 `protobuf:"varint,3,opt,name=utime,proto3" json:"utime,omitempty"`                    // 失效时间
}

func (x *TbPlayerGuildRefuseList) Reset() {
	*x = TbPlayerGuildRefuseList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_table_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TbPlayerGuildRefuseList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TbPlayerGuildRefuseList) ProtoMessage() {}

func (x *TbPlayerGuildRefuseList) ProtoReflect() protoreflect.Message {
	mi := &file_table_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TbPlayerGuildRefuseList.ProtoReflect.Descriptor instead.
func (*TbPlayerGuildRefuseList) Descriptor() ([]byte, []int) {
	return file_table_proto_rawDescGZIP(), []int{33}
}

func (x *TbPlayerGuildRefuseList) GetGuid() uint64 {
	if x != nil {
		return x.Guid
	}
	return 0
}

func (x *TbPlayerGuildRefuseList) GetGuildId() uint64 {
	if x != nil {
		return x.GuildId
	}
	return 0
}

func (x *TbPlayerGuildRefuseList) GetUtime() uint64 {
	if x != nil {
		return x.Utime
	}
	return 0
}

// 玩家统计指标
type TbPlayerTag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Guid uint64 `protobuf:"varint,1,opt,name=guid,proto3" json:"guid,omitempty"` // 用户guid
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`  // player_statistics_info ,具体的统计数据，通过结构序列化
}

func (x *TbPlayerTag) Reset() {
	*x = TbPlayerTag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_table_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TbPlayerTag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TbPlayerTag) ProtoMessage() {}

func (x *TbPlayerTag) ProtoReflect() protoreflect.Message {
	mi := &file_table_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TbPlayerTag.ProtoReflect.Descriptor instead.
func (*TbPlayerTag) Descriptor() ([]byte, []int) {
	return file_table_proto_rawDescGZIP(), []int{34}
}

func (x *TbPlayerTag) GetGuid() uint64 {
	if x != nil {
		return x.Guid
	}
	return 0
}

func (x *TbPlayerTag) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// 玩家结果标签
type TbPlayerTagResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Guid            uint64 `protobuf:"varint,1,opt,name=guid,proto3" json:"guid,omitempty"`
	IsDayPlayer     uint32 `protobuf:"varint,2,opt,name=is_day_player,json=isDayPlayer,proto3" json:"is_day_player,omitempty"`
	IsNightPlayer   uint32 `protobuf:"varint,3,opt,name=is_night_player,json=isNightPlayer,proto3" json:"is_night_player,omitempty"`
	IsWorkdayPlayer uint32 `protobuf:"varint,4,opt,name=is_workday_player,json=isWorkdayPlayer,proto3" json:"is_workday_player,omitempty"`
	IsWeekendPlayer uint32 `protobuf:"varint,5,opt,name=is_weekend_player,json=isWeekendPlayer,proto3" json:"is_weekend_player,omitempty"`
	MatchType       uint32 `protobuf:"varint,6,opt,name=match_type,json=matchType,proto3" json:"match_type,omitempty"`
	VoiceType       uint32 `protobuf:"varint,7,opt,name=voice_type,json=voiceType,proto3" json:"voice_type,omitempty"`
	RankHideScore   uint32 `protobuf:"varint,8,opt,name=rank_hide_score,json=rankHideScore,proto3" json:"rank_hide_score,omitempty"`
	OtherHideScore  uint32 `protobuf:"varint,9,opt,name=other_hide_score,json=otherHideScore,proto3" json:"other_hide_score,omitempty"`
	IsOnline        uint32 `protobuf:"varint,10,opt,name=is_online,json=isOnline,proto3" json:"is_online,omitempty"`
	RankedLevel     int64  `protobuf:"varint,11,opt,name=ranked_level,json=rankedLevel,proto3" json:"ranked_level,omitempty"`
}

func (x *TbPlayerTagResult) Reset() {
	*x = TbPlayerTagResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_table_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TbPlayerTagResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TbPlayerTagResult) ProtoMessage() {}

func (x *TbPlayerTagResult) ProtoReflect() protoreflect.Message {
	mi := &file_table_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TbPlayerTagResult.ProtoReflect.Descriptor instead.
func (*TbPlayerTagResult) Descriptor() ([]byte, []int) {
	return file_table_proto_rawDescGZIP(), []int{35}
}

func (x *TbPlayerTagResult) GetGuid() uint64 {
	if x != nil {
		return x.Guid
	}
	return 0
}

func (x *TbPlayerTagResult) GetIsDayPlayer() uint32 {
	if x != nil {
		return x.IsDayPlayer
	}
	return 0
}

func (x *TbPlayerTagResult) GetIsNightPlayer() uint32 {
	if x != nil {
		return x.IsNightPlayer
	}
	return 0
}

func (x *TbPlayerTagResult) GetIsWorkdayPlayer() uint32 {
	if x != nil {
		return x.IsWorkdayPlayer
	}
	return 0
}

func (x *TbPlayerTagResult) GetIsWeekendPlayer() uint32 {
	if x != nil {
		return x.IsWeekendPlayer
	}
	return 0
}

func (x *TbPlayerTagResult) GetMatchType() uint32 {
	if x != nil {
		return x.MatchType
	}
	return 0
}

func (x *TbPlayerTagResult) GetVoiceType() uint32 {
	if x != nil {
		return x.VoiceType
	}
	return 0
}

func (x *TbPlayerTagResult) GetRankHideScore() uint32 {
	if x != nil {
		return x.RankHideScore
	}
	return 0
}

func (x *TbPlayerTagResult) GetOtherHideScore() uint32 {
	if x != nil {
		return x.OtherHideScore
	}
	return 0
}

func (x *TbPlayerTagResult) GetIsOnline() uint32 {
	if x != nil {
		return x.IsOnline
	}
	return 0
}

func (x *TbPlayerTagResult) GetRankedLevel() int64 {
	if x != nil {
		return x.RankedLevel
	}
	return 0
}

//好友间共享的信息列表
type TbFriendShare struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LittleGuid uint64 `protobuf:"varint,1,opt,name=little_guid,json=littleGuid,proto3" json:"little_guid,omitempty"`
	LargeGuid  uint64 `protobuf:"varint,2,opt,name=large_guid,json=largeGuid,proto3" json:"large_guid,omitempty"`
	Data       []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"` //共享的信息
}

func (x *TbFriendShare) Reset() {
	*x = TbFriendShare{}
	if protoimpl.UnsafeEnabled {
		mi := &file_table_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TbFriendShare) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TbFriendShare) ProtoMessage() {}

func (x *TbFriendShare) ProtoReflect() protoreflect.Message {
	mi := &file_table_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TbFriendShare.ProtoReflect.Descriptor instead.
func (*TbFriendShare) Descriptor() ([]byte, []int) {
	return file_table_proto_rawDescGZIP(), []int{36}
}

func (x *TbFriendShare) GetLittleGuid() uint64 {
	if x != nil {
		return x.LittleGuid
	}
	return 0
}

func (x *TbFriendShare) GetLargeGuid() uint64 {
	if x != nil {
		return x.LargeGuid
	}
	return 0
}

func (x *TbFriendShare) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// 单局相关数据
type TbGameInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameId uint64 `protobuf:"varint,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"` // 用户guid
	Data   []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`                    //记录结算的10个人的数据，最开始包含精彩集锦
}

func (x *TbGameInfo) Reset() {
	*x = TbGameInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_table_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TbGameInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TbGameInfo) ProtoMessage() {}

func (x *TbGameInfo) ProtoReflect() protoreflect.Message {
	mi := &file_table_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TbGameInfo.ProtoReflect.Descriptor instead.
func (*TbGameInfo) Descriptor() ([]byte, []int) {
	return file_table_proto_rawDescGZIP(), []int{37}
}

func (x *TbGameInfo) GetGameId() uint64 {
	if x != nil {
		return x.GameId
	}
	return 0
}

func (x *TbGameInfo) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// 精彩集锦相关数据
type TbExcellentMomentList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Guid uint64 `protobuf:"varint,1,opt,name=guid,proto3" json:"guid,omitempty"` // 用户guid
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *TbExcellentMomentList) Reset() {
	*x = TbExcellentMomentList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_table_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TbExcellentMomentList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TbExcellentMomentList) ProtoMessage() {}

func (x *TbExcellentMomentList) ProtoReflect() protoreflect.Message {
	mi := &file_table_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TbExcellentMomentList.ProtoReflect.Descriptor instead.
func (*TbExcellentMomentList) Descriptor() ([]byte, []int) {
	return file_table_proto_rawDescGZIP(), []int{38}
}

func (x *TbExcellentMomentList) GetGuid() uint64 {
	if x != nil {
		return x.Guid
	}
	return 0
}

func (x *TbExcellentMomentList) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// ID映射表，
type TbGroupShortInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShortId uint64 `protobuf:"varint,1,opt,name=short_id,json=shortId,proto3" json:"short_id,omitempty"`
	GroupId uint64 `protobuf:"varint,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
}

func (x *TbGroupShortInfo) Reset() {
	*x = TbGroupShortInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_table_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TbGroupShortInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TbGroupShortInfo) ProtoMessage() {}

func (x *TbGroupShortInfo) ProtoReflect() protoreflect.Message {
	mi := &file_table_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TbGroupShortInfo.ProtoReflect.Descriptor instead.
func (*TbGroupShortInfo) Descriptor() ([]byte, []int) {
	return file_table_proto_rawDescGZIP(), []int{39}
}

func (x *TbGroupShortInfo) GetShortId() uint64 {
	if x != nil {
		return x.ShortId
	}
	return 0
}

func (x *TbGroupShortInfo) GetGroupId() uint64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

//触发队友消极比赛补偿表
type TbNegativeCompensateRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameId uint64 `protobuf:"varint,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	Data   []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *TbNegativeCompensateRecord) Reset() {
	*x = TbNegativeCompensateRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_table_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TbNegativeCompensateRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TbNegativeCompensateRecord) ProtoMessage() {}

func (x *TbNegativeCompensateRecord) ProtoReflect() protoreflect.Message {
	mi := &file_table_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TbNegativeCompensateRecord.ProtoReflect.Descriptor instead.
func (*TbNegativeCompensateRecord) Descriptor() ([]byte, []int) {
	return file_table_proto_rawDescGZIP(), []int{40}
}

func (x *TbNegativeCompensateRecord) GetGameId() uint64 {
	if x != nil {
		return x.GameId
	}
	return 0
}

func (x *TbNegativeCompensateRecord) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_table_proto protoreflect.FileDescriptor

var file_table_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x74,
	0x63, 0x61, 0x70, 0x6c, 0x75, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x1a, 0x1d, 0x74,
	0x63, 0x61, 0x70, 0x6c, 0x75, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x76, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa5, 0x01, 0x0a,
	0x0c, 0x74, 0x62, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x74, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12,
	0x17, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x05, 0x80, 0xa6,
	0x1d, 0x80, 0x01, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x06, 0x80, 0xa6, 0x1d, 0x80, 0xa0, 0x06, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x3a, 0x24,
	0x82, 0xa6, 0x1d, 0x07, 0x74, 0x61, 0x67, 0x2c, 0x6b, 0x65, 0x79, 0xaa, 0xa6, 0x1d, 0x03, 0x74,
	0x61, 0x67, 0x8a, 0xa6, 0x1d, 0x0e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x74, 0x61, 0x67, 0x28,
	0x74, 0x61, 0x67, 0x29, 0x22, 0xf8, 0x01, 0x0a, 0x09, 0x74, 0x62, 0x5f, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x6e, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x69, 0x6e, 0x73, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x37, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x74, 0x63, 0x61, 0x70, 0x6c, 0x75, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x74,
	0x62, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x37, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x3a, 0x1c, 0x82, 0xa6, 0x1d, 0x02, 0x69, 0x64, 0xaa, 0xa6, 0x1d, 0x02, 0x69, 0x64, 0x8a,
	0xa6, 0x1d, 0x0c, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x69, 0x64, 0x28, 0x69, 0x64, 0x29, 0x22,
	0x9c, 0x02, 0x0a, 0x11, 0x74, 0x62, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6f,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x75, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x67, 0x75, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x6c,
	0x6f, 0x62, 0x62, 0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x6c, 0x6f, 0x62, 0x62, 0x79, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x49, 0x6e, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x61, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x62, 0x61, 0x6e, 0x12, 0x2b, 0x0a, 0x0e, 0x62, 0x61, 0x6e, 0x5f, 0x72, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x05, 0x80,
	0xa6, 0x1d, 0x80, 0x04, 0x52, 0x0c, 0x62, 0x61, 0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x53,
	0x74, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x61, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x62, 0x61, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a,
	0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0x05, 0x80,
	0xa6, 0x1d, 0x80, 0x01, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x3a, 0x20, 0x82, 0xa6,
	0x1d, 0x03, 0x75, 0x69, 0x64, 0xaa, 0xa6, 0x1d, 0x03, 0x75, 0x69, 0x64, 0x8a, 0xa6, 0x1d, 0x0e,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x75, 0x69, 0x64, 0x28, 0x75, 0x69, 0x64, 0x29, 0x22, 0x8a,
	0x01, 0x0a, 0x0e, 0x74, 0x62, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x6f, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x04, 0x67, 0x75, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x6c, 0x6f, 0x62, 0x62, 0x79, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0e, 0x6c, 0x6f, 0x62, 0x62, 0x79, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x73, 0x12,
	0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x3a, 0x1c, 0x82,
	0xa6, 0x1d, 0x04, 0x67, 0x75, 0x69, 0x64, 0x8a, 0xa6, 0x1d, 0x10, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x5f, 0x67, 0x75, 0x69, 0x64, 0x28, 0x67, 0x75, 0x69, 0x64, 0x29, 0x22, 0x49, 0x0a, 0x09, 0x74,
	0x62, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x05, 0x80, 0xa6, 0x1d, 0x80, 0x01, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x1a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x42,
	0x06, 0x80, 0xa6, 0x1d, 0x80, 0xa0, 0x06, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x3a, 0x07, 0x82,
	0xa6, 0x1d, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x62, 0x0a, 0x12, 0x74, 0x62, 0x5f, 0x72, 0x6f, 0x6c,
	0x65, 0x5f, 0x62, 0x72, 0x69, 0x65, 0x66, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04,
	0x67, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x67, 0x75, 0x69, 0x64,
	0x12, 0x1a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x06,
	0x80, 0xa6, 0x1d, 0x80, 0xa0, 0x06, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x3a, 0x1c, 0x82, 0xa6,
	0x1d, 0x04, 0x67, 0x75, 0x69, 0x64, 0x8a, 0xa6, 0x1d, 0x10, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f,
	0x67, 0x75, 0x69, 0x64, 0x28, 0x67, 0x75, 0x69, 0x64, 0x29, 0x22, 0x51, 0x0a, 0x0b, 0x74, 0x62,
	0x5f, 0x67, 0x61, 0x6d, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x08, 0x67, 0x61, 0x6d,
	0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0x80, 0xa6, 0x1d,
	0x14, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x67,
	0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x67, 0x75, 0x69, 0x64, 0x3a,
	0x0c, 0x82, 0xa6, 0x1d, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xad, 0x02,
	0x0a, 0x12, 0x74, 0x62, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x5f, 0x63, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x4b, 0x65, 0x79, 0x12,
	0x23, 0x0a, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x04, 0x80, 0xa6, 0x1d, 0x20, 0x52, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x41,
	0x70, 0x70, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x04, 0x67, 0x73, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x04, 0x80, 0xa6, 0x1d, 0x20, 0x52, 0x04, 0x67, 0x73, 0x69, 0x64, 0x12, 0x1f,
	0x0a, 0x08, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x04, 0x80, 0xa6, 0x1d, 0x20, 0x52, 0x07, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x49, 0x64, 0x12,
	0x24, 0x0a, 0x0e, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x63, 0x6e, 0x74, 0x5f, 0x69, 0x6f,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x43,
	0x6e, 0x74, 0x49, 0x6f, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f,
	0x63, 0x6e, 0x74, 0x5f, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x10, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6e, 0x74, 0x41, 0x6e, 0x64, 0x72,
	0x6f, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5f,
	0x6e, 0x75, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x3a, 0x25, 0x82, 0xa6, 0x1d, 0x21, 0x74, 0x69, 0x6d, 0x65,
	0x5f, 0x6b, 0x65, 0x79, 0x2c, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x61, 0x70, 0x70, 0x69, 0x64, 0x2c,
	0x67, 0x73, 0x69, 0x64, 0x2c, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x22, 0x4f, 0x0a,
	0x0d, 0x74, 0x62, 0x5f, 0x77, 0x68, 0x69, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x1c,
	0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04,
	0x80, 0xa6, 0x1d, 0x40, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x3a, 0x0a, 0x82, 0xa6, 0x1d, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x22, 0x6b,
	0x0a, 0x0c, 0x74, 0x62, 0x5f, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x64, 0x5f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x69, 0x64, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x3a, 0x24, 0x82, 0xa6, 0x1d, 0x04, 0x74, 0x79, 0x70, 0x65, 0xaa,
	0xa6, 0x1d, 0x04, 0x74, 0x79, 0x70, 0x65, 0x8a, 0xa6, 0x1d, 0x10, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x28, 0x74, 0x79, 0x70, 0x65, 0x29, 0x22, 0x5a, 0x0a, 0x0a, 0x74,
	0x62, 0x5f, 0x72, 0x65, 0x67, 0x5f, 0x63, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x72,
	0x65, 0x67, 0x5f, 0x63, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x72, 0x65,
	0x67, 0x43, 0x6e, 0x74, 0x3a, 0x21, 0x82, 0xa6, 0x1d, 0x03, 0x6b, 0x65, 0x79, 0xaa, 0xa6, 0x1d,
	0x03, 0x6b, 0x65, 0x79, 0x8a, 0xa6, 0x1d, 0x0f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x28, 0x6b, 0x65, 0x79, 0x29, 0x22, 0x80, 0x01, 0x0a, 0x0b, 0x74, 0x62, 0x5f, 0x72,
	0x6f, 0x6c, 0x65, 0x5f, 0x65, 0x78, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x67, 0x75, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x03, 0x74,
	0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x05, 0x80, 0xa6, 0x1d, 0x80, 0x08, 0x52,
	0x03, 0x74, 0x61, 0x67, 0x12, 0x1a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x42, 0x06, 0x80, 0xa6, 0x1d, 0x80, 0xa0, 0x06, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x3a, 0x28, 0x82, 0xa6, 0x1d, 0x08, 0x67, 0x75, 0x69, 0x64, 0x2c, 0x74, 0x61, 0x67, 0xaa, 0xa6,
	0x1d, 0x04, 0x67, 0x75, 0x69, 0x64, 0x8a, 0xa6, 0x1d, 0x10, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f,
	0x67, 0x75, 0x69, 0x64, 0x28, 0x67, 0x75, 0x69, 0x64, 0x29, 0x22, 0x84, 0x01, 0x0a, 0x14, 0x74,
	0x62, 0x5f, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x65, 0x6e, 0x73, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x04, 0x67, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x05, 0x80, 0xa6, 0x1d, 0x80, 0x50,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x3a, 0x29, 0x82, 0xa6, 0x1d, 0x09, 0x67, 0x75, 0x69, 0x64,
	0x2c, 0x74, 0x79, 0x70, 0x65, 0xaa, 0xa6, 0x1d, 0x04, 0x67, 0x75, 0x69, 0x64, 0x8a, 0xa6, 0x1d,
	0x10, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x28, 0x67, 0x75, 0x69, 0x64,
	0x29, 0x22, 0x83, 0x02, 0x0a, 0x0b, 0x74, 0x62, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x04, 0x67, 0x75, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x05, 0x80, 0xa6, 0x1d, 0x80,
	0x01, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x06, 0x80, 0xa6, 0x1d, 0x80,
	0xa0, 0x06, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x63, 0x6f, 0x6e, 0x66, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x66, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x3a,
	0x46, 0x82, 0xa6, 0x1d, 0x11, 0x67, 0x75, 0x69, 0x64, 0x2c, 0x20, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0xaa, 0xa6, 0x1d, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x5f, 0x69, 0x64, 0x8a, 0xa6, 0x1d, 0x1e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x28, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x29, 0x22, 0x84, 0x01, 0x0a, 0x13, 0x74, 0x62, 0x5f, 0x6c,
	0x61, 0x73, 0x74, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x67, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x67,
	0x75, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x06, 0x80, 0xa6, 0x1d, 0x80,
	0xa0, 0x06, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x3a, 0x24, 0x82, 0xa6, 0x1d, 0x04, 0x67, 0x75,
	0x69, 0x64, 0xaa, 0xa6, 0x1d, 0x04, 0x67, 0x75, 0x69, 0x64, 0x8a, 0xa6, 0x1d, 0x10, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x28, 0x67, 0x75, 0x69, 0x64, 0x29, 0x22, 0x82,
	0x01, 0x0a, 0x11, 0x74, 0x62, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x5f,
	0x74, 0x61, 0x73, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x04, 0x67, 0x75, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x42,
	0x06, 0x80, 0xa6, 0x1d, 0x80, 0xa0, 0x06, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x3a, 0x24, 0x82,
	0xa6, 0x1d, 0x04, 0x67, 0x75, 0x69, 0x64, 0xaa, 0xa6, 0x1d, 0x04, 0x67, 0x75, 0x69, 0x64, 0x8a,
	0xa6, 0x1d, 0x10, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x28, 0x67, 0x75,
	0x69, 0x64, 0x29, 0x22, 0x90, 0x01, 0x0a, 0x13, 0x74, 0x62, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x67,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x67, 0x75, 0x69, 0x64, 0x12,
	0x1a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x06, 0x80,
	0xa6, 0x1d, 0x80, 0xa0, 0x06, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x0d, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0c, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65,
	0x3a, 0x24, 0x82, 0xa6, 0x1d, 0x04, 0x67, 0x75, 0x69, 0x64, 0xaa, 0xa6, 0x1d, 0x04, 0x67, 0x75,
	0x69, 0x64, 0x8a, 0xa6, 0x1d, 0x10, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x67, 0x75, 0x69, 0x64,
	0x28, 0x67, 0x75, 0x69, 0x64, 0x29, 0x22, 0xa1, 0x01, 0x0a, 0x08, 0x74, 0x62, 0x5f, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x6e, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x69, 0x6e, 0x73, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x1a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x06,
	0x80, 0xa6, 0x1d, 0x80, 0xa0, 0x06, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x3a, 0x1c, 0x82, 0xa6,
	0x1d, 0x02, 0x69, 0x64, 0xaa, 0xa6, 0x1d, 0x02, 0x69, 0x64, 0x8a, 0xa6, 0x1d, 0x0c, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x5f, 0x69, 0x64, 0x28, 0x69, 0x64, 0x29, 0x22, 0xa0, 0x01, 0x0a, 0x07, 0x74,
	0x62, 0x5f, 0x72, 0x6f, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x6e, 0x73, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x69, 0x6e, 0x73, 0x74, 0x49, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0c, 0x42, 0x06, 0x80, 0xa6, 0x1d, 0x80, 0xa0, 0x06, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x3a,
	0x1c, 0x82, 0xa6, 0x1d, 0x02, 0x69, 0x64, 0xaa, 0xa6, 0x1d, 0x02, 0x69, 0x64, 0x8a, 0xa6, 0x1d,
	0x0c, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x69, 0x64, 0x28, 0x69, 0x64, 0x29, 0x22, 0x79, 0x0a,
	0x0c, 0x74, 0x62, 0x5f, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x67, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x67, 0x75, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x04, 0x66, 0x75, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0c, 0x42, 0x05, 0x80, 0xa6, 0x1d, 0x80, 0x02, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x3a, 0x26, 0x82, 0xa6, 0x1d, 0x04, 0x67, 0x75, 0x69, 0x64, 0xb2, 0xa6, 0x1d, 0x1a, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x3d, 0x4c, 0x49, 0x53, 0x54, 0x3b, 0x4c, 0x69, 0x73,
	0x74, 0x4e, 0x75, 0x6d, 0x3d, 0x31, 0x30, 0x30, 0x22, 0x94, 0x01, 0x0a, 0x0e, 0x74, 0x62, 0x5f,
	0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x67,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x67, 0x75, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x04, 0x66, 0x75, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x05, 0x80, 0xa6, 0x1d, 0x80, 0x01, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x3a, 0x2b, 0x82, 0xa6, 0x1d, 0x09, 0x67, 0x75, 0x69, 0x64, 0x2c, 0x74, 0x79, 0x70,
	0x65, 0xb2, 0xa6, 0x1d, 0x1a, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x3d, 0x4c,
	0x49, 0x53, 0x54, 0x3b, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x75, 0x6d, 0x3d, 0x33, 0x30, 0x30, 0x22,
	0x7e, 0x0a, 0x0c, 0x74, 0x62, 0x5f, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x67, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x67,
	0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x05, 0x80, 0xa6, 0x1d, 0x80, 0x08, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x3a, 0x2b, 0x82, 0xa6, 0x1d, 0x09, 0x67, 0x75, 0x69, 0x64, 0x2c, 0x74, 0x79, 0x70,
	0x65, 0xb2, 0xa6, 0x1d, 0x1a, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x3d, 0x4c,
	0x49, 0x53, 0x54, 0x3b, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x75, 0x6d, 0x3d, 0x31, 0x30, 0x30, 0x22,
	0x8a, 0x01, 0x0a, 0x0f, 0x74, 0x62, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x04, 0x67, 0x75, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x42, 0x06, 0x80, 0xa6, 0x1d, 0x80, 0xa0, 0x06, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x3a, 0x2c,
	0x82, 0xa6, 0x1d, 0x0d, 0x67, 0x75, 0x69, 0x64, 0x2c, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0xaa, 0xa6, 0x1d, 0x04, 0x67, 0x75, 0x69, 0x64, 0x8a, 0xa6, 0x1d, 0x0f, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x5f, 0x74, 0x61, 0x67, 0x28, 0x67, 0x75, 0x69, 0x64, 0x29, 0x22, 0x6f, 0x0a, 0x16,
	0x74, 0x62, 0x5f, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x5f, 0x62, 0x72, 0x69, 0x65, 0x66, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x67, 0x75, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x05, 0x80, 0xa6, 0x1d, 0x80, 0x08, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x3a, 0x26, 0x82, 0xa6, 0x1d, 0x04, 0x67, 0x75, 0x69, 0x64, 0xb2,
	0xa6, 0x1d, 0x1a, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x3d, 0x4c, 0x49, 0x53,
	0x54, 0x3b, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x75, 0x6d, 0x3d, 0x32, 0x30, 0x30, 0x22, 0x89, 0x01,
	0x0a, 0x10, 0x74, 0x62, 0x5f, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x04, 0x67, 0x75, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x06, 0x80,
	0xa6, 0x1d, 0x80, 0xa0, 0x06, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x3a, 0x2c, 0x82, 0xa6, 0x1d,
	0x0c, 0x67, 0x75, 0x69, 0x64, 0x2c, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0xaa, 0xa6, 0x1d,
	0x04, 0x67, 0x75, 0x69, 0x64, 0x8a, 0xa6, 0x1d, 0x10, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x67,
	0x75, 0x69, 0x64, 0x28, 0x67, 0x75, 0x69, 0x64, 0x29, 0x22, 0xa3, 0x01, 0x0a, 0x16, 0x74, 0x62,
	0x5f, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x06, 0x80, 0xa6, 0x1d, 0x80, 0xa0, 0x06, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x3a, 0x39, 0x82, 0xa6, 0x1d, 0x10, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69,
	0x64, 0x2c, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0xaa, 0xa6, 0x1d, 0x07, 0x67, 0x61,
	0x6d, 0x65, 0x5f, 0x69, 0x64, 0x8a, 0xa6, 0x1d, 0x16, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x67,
	0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x28, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x29, 0x22,
	0x68, 0x0a, 0x10, 0x74, 0x62, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x5f, 0x72, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x04, 0x67, 0x75, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x05, 0x80, 0xa6, 0x1d, 0x80, 0x08, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x3a, 0x25, 0x82, 0xa6, 0x1d, 0x04, 0x67, 0x75, 0x69, 0x64, 0xb2, 0xa6, 0x1d, 0x19,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x3d, 0x4c, 0x49, 0x53, 0x54, 0x3b, 0x4c,
	0x69, 0x73, 0x74, 0x4e, 0x75, 0x6d, 0x3d, 0x35, 0x30, 0x22, 0x88, 0x01, 0x0a, 0x10, 0x74, 0x62,
	0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x67, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x67, 0x75,
	0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x05, 0x80, 0xa6, 0x1d, 0x80, 0x50,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x3a, 0x2c, 0x82, 0xa6, 0x1d, 0x0c, 0x67, 0x75, 0x69, 0x64,
	0x2c, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0xaa, 0xa6, 0x1d, 0x04, 0x67, 0x75, 0x69, 0x64,
	0x8a, 0xa6, 0x1d, 0x10, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x28, 0x67,
	0x75, 0x69, 0x64, 0x29, 0x22, 0x6c, 0x0a, 0x14, 0x74, 0x62, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x69,
	0x74, 0x5f, 0x65, 0x78, 0x70, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x67, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x67, 0x75, 0x69, 0x64,
	0x12, 0x19, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x05,
	0x80, 0xa6, 0x1d, 0x80, 0x08, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x3a, 0x25, 0x82, 0xa6, 0x1d,
	0x04, 0x67, 0x75, 0x69, 0x64, 0xb2, 0xa6, 0x1d, 0x19, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x3d, 0x4c, 0x49, 0x53, 0x54, 0x3b, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x75, 0x6d, 0x3d,
	0x35, 0x30, 0x22, 0xc0, 0x02, 0x0a, 0x08, 0x74, 0x62, 0x5f, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x5f, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x6c,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x69,
	0x6e, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x69, 0x6e,
	0x73, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x09, 0x67, 0x75, 0x69, 0x6c,
	0x64, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0x80, 0xa6, 0x1d,
	0x1e, 0x52, 0x09, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x06, 0x80, 0xa6, 0x1d, 0x80,
	0xa0, 0x06, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x3a, 0x1c, 0x82, 0xa6, 0x1d, 0x02, 0x69, 0x64, 0xaa,
	0xa6, 0x1d, 0x02, 0x69, 0x64, 0x8a, 0xa6, 0x1d, 0x0c, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x69,
	0x64, 0x28, 0x69, 0x64, 0x29, 0x22, 0x5c, 0x0a, 0x0c, 0x74, 0x62, 0x5f, 0x67, 0x75, 0x69, 0x6c,
	0x64, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x09, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0x80, 0xa6, 0x1d, 0x1e, 0x52, 0x09,
	0x67, 0x75, 0x69, 0x6c, 0x64, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x75, 0x69,
	0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x67, 0x75, 0x69,
	0x6c, 0x64, 0x49, 0x64, 0x3a, 0x0d, 0x82, 0xa6, 0x1d, 0x09, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x8a, 0x01, 0x0a, 0x13, 0x74, 0x62, 0x5f, 0x67, 0x75, 0x69, 0x6c, 0x64,
	0x5f, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x67,
	0x75, 0x69, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x67,
	0x75, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x75, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x67, 0x75, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x05, 0x80, 0xa6, 0x1d, 0x80, 0x08, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x3a, 0x29, 0x82, 0xa6, 0x1d, 0x08, 0x67, 0x75, 0x69, 0x6c, 0x64,
	0x5f, 0x69, 0x64, 0xb2, 0xa6, 0x1d, 0x19, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x3d, 0x4c, 0x49, 0x53, 0x54, 0x3b, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x75, 0x6d, 0x3d, 0x35, 0x30,
	0x22, 0x8e, 0x01, 0x0a, 0x1b, 0x74, 0x62, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x67,
	0x75, 0x69, 0x6c, 0x64, 0x5f, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x67, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04,
	0x67, 0x75, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x12,
	0x19, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x05, 0x80,
	0xa6, 0x1d, 0x80, 0x08, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x3a, 0x25, 0x82, 0xa6, 0x1d, 0x04,
	0x67, 0x75, 0x69, 0x64, 0xb2, 0xa6, 0x1d, 0x19, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x3d, 0x4c, 0x49, 0x53, 0x54, 0x3b, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x75, 0x6d, 0x3d, 0x35,
	0x30, 0x22, 0x89, 0x01, 0x0a, 0x1b, 0x74, 0x62, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f,
	0x67, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x04, 0x67, 0x75, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x75, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x05, 0x75, 0x74, 0x69, 0x6d, 0x65, 0x3a, 0x25, 0x82, 0xa6, 0x1d, 0x04, 0x67, 0x75, 0x69, 0x64,
	0xb2, 0xa6, 0x1d, 0x19, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x3d, 0x4c, 0x49,
	0x53, 0x54, 0x3b, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x75, 0x6d, 0x3d, 0x35, 0x30, 0x22, 0x5d, 0x0a,
	0x0d, 0x74, 0x62, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x74, 0x61, 0x67, 0x12, 0x12,
	0x0a, 0x04, 0x67, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x67, 0x75,
	0x69, 0x64, 0x12, 0x1a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x42, 0x06, 0x80, 0xa6, 0x1d, 0x80, 0xa0, 0x06, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x3a, 0x1c,
	0x82, 0xa6, 0x1d, 0x04, 0x67, 0x75, 0x69, 0x64, 0x8a, 0xa6, 0x1d, 0x10, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x28, 0x67, 0x75, 0x69, 0x64, 0x29, 0x22, 0xbc, 0x03, 0x0a,
	0x14, 0x74, 0x62, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x74, 0x61, 0x67, 0x5f, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x04, 0x67, 0x75, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x69, 0x73, 0x5f,
	0x64, 0x61, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0b, 0x69, 0x73, 0x44, 0x61, 0x79, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x26, 0x0a,
	0x0f, 0x69, 0x73, 0x5f, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x69, 0x73, 0x4e, 0x69, 0x67, 0x68, 0x74, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x11, 0x69, 0x73, 0x5f, 0x77, 0x6f, 0x72, 0x6b,
	0x64, 0x61, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0f, 0x69, 0x73, 0x57, 0x6f, 0x72, 0x6b, 0x64, 0x61, 0x79, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x12, 0x2a, 0x0a, 0x11, 0x69, 0x73, 0x5f, 0x77, 0x65, 0x65, 0x6b, 0x65, 0x6e, 0x64, 0x5f,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x69, 0x73,
	0x57, 0x65, 0x65, 0x6b, 0x65, 0x6e, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x1d, 0x0a,
	0x0a, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x72,
	0x61, 0x6e, 0x6b, 0x5f, 0x68, 0x69, 0x64, 0x65, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x72, 0x61, 0x6e, 0x6b, 0x48, 0x69, 0x64, 0x65, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x68, 0x69, 0x64,
	0x65, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x6f,
	0x74, 0x68, 0x65, 0x72, 0x48, 0x69, 0x64, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x69, 0x73, 0x5f, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x69, 0x73, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x61,
	0x6e, 0x6b, 0x65, 0x64, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x72, 0x61, 0x6e, 0x6b, 0x65, 0x64, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x3a, 0x1c, 0x82,
	0xa6, 0x1d, 0x04, 0x67, 0x75, 0x69, 0x64, 0x8a, 0xa6, 0x1d, 0x10, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x5f, 0x67, 0x75, 0x69, 0x64, 0x28, 0x67, 0x75, 0x69, 0x64, 0x29, 0x22, 0xb2, 0x01, 0x0a, 0x0f,
	0x74, 0x62, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x47, 0x75, 0x69, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x61, 0x72, 0x67, 0x65, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x6c, 0x61, 0x72, 0x67, 0x65, 0x47, 0x75, 0x69, 0x64, 0x12,
	0x19, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x05, 0x80,
	0xa6, 0x1d, 0x80, 0x50, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x3a, 0x44, 0x82, 0xa6, 0x1d, 0x17,
	0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x2c, 0x20, 0x6c, 0x61, 0x72,
	0x67, 0x65, 0x5f, 0x67, 0x75, 0x69, 0x64, 0xaa, 0xa6, 0x1d, 0x0b, 0x6c, 0x69, 0x74, 0x74, 0x6c,
	0x65, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x8a, 0xa6, 0x1d, 0x16, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f,
	0x74, 0x61, 0x67, 0x28, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x29,
	0x22, 0x67, 0x0a, 0x0c, 0x74, 0x62, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x12, 0x17, 0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x06, 0x80, 0xa6, 0x1d, 0x80, 0xa0, 0x06, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x3a, 0x22, 0x82, 0xa6, 0x1d, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f,
	0x69, 0x64, 0x8a, 0xa6, 0x1d, 0x13, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x67, 0x75, 0x69, 0x64,
	0x28, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x29, 0x22, 0x70, 0x0a, 0x18, 0x74, 0x62, 0x5f,
	0x65, 0x78, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x04, 0x67, 0x75, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x05, 0x80, 0xa6, 0x1d, 0x80, 0x08, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x3a, 0x25, 0x82, 0xa6, 0x1d, 0x04, 0x67, 0x75, 0x69, 0x64, 0xb2, 0xa6,
	0x1d, 0x19, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x3d, 0x4c, 0x49, 0x53, 0x54,
	0x3b, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x75, 0x6d, 0x3d, 0x35, 0x30, 0x22, 0x71, 0x0a, 0x13, 0x74,
	0x62, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x3a, 0x24, 0x82, 0xa6, 0x1d, 0x08, 0x73, 0x68,
	0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x8a, 0xa6, 0x1d, 0x14, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f,
	0x67, 0x75, 0x69, 0x64, 0x28, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x29, 0x22, 0x77,
	0x0a, 0x1d, 0x74, 0x62, 0x5f, 0x6e, 0x65, 0x67, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x63, 0x6f,
	0x6d, 0x70, 0x65, 0x6e, 0x73, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x05, 0x80, 0xa6, 0x1d, 0x80, 0x50, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x3a, 0x22, 0x82, 0xa6, 0x1d, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64,
	0x8a, 0xa6, 0x1d, 0x13, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x28, 0x67,
	0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x29, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_table_proto_rawDescOnce sync.Once
	file_table_proto_rawDescData = file_table_proto_rawDesc
)

func file_table_proto_rawDescGZIP() []byte {
	file_table_proto_rawDescOnce.Do(func() {
		file_table_proto_rawDescData = protoimpl.X.CompressGZIP(file_table_proto_rawDescData)
	})
	return file_table_proto_rawDescData
}

var file_table_proto_msgTypes = make([]protoimpl.MessageInfo, 42)
var file_table_proto_goTypes = []interface{}{
	(*TbKeyValue)(nil),                 // 0: tcaplusservice.tb_key_value
	(*TbPlayer)(nil),                   // 1: tcaplusservice.tb_player
	(*TbAccountOnline)(nil),            // 2: tcaplusservice.tb_account_online
	(*TbRoleOnline)(nil),               // 3: tcaplusservice.tb_role_online
	(*TbOpenid)(nil),                   // 4: tcaplusservice.tb_openid
	(*TbRoleBriefInfo)(nil),            // 5: tcaplusservice.tb_role_brief_info
	(*TbGamename)(nil),                 // 6: tcaplusservice.tb_gamename
	(*TbRoleOnlineCnt)(nil),            // 7: tcaplusservice.tb_role_online_cnt
	(*TbWhiteList)(nil),                // 8: tcaplusservice.tb_white_list
	(*TbGlobalId)(nil),                 // 9: tcaplusservice.tb_global_id
	(*TbRegCnt)(nil),                   // 10: tcaplusservice.tb_reg_cnt
	(*TbRoleExt)(nil),                  // 11: tcaplusservice.tb_role_ext
	(*TbMailCompensation)(nil),         // 12: tcaplusservice.tb_mail_compensation
	(*TbActivity)(nil),                 // 13: tcaplusservice.tb_activity
	(*TbLastGameResult)(nil),           // 14: tcaplusservice.tb_last_game_result
	(*TbLastGameTask)(nil),             // 15: tcaplusservice.tb_last_game_task
	(*TbPlayerStatistic)(nil),          // 16: tcaplusservice.tb_player_statistic
	(*TbGroup)(nil),                    // 17: tcaplusservice.tb_group
	(*TbRoom)(nil),                     // 18: tcaplusservice.tb_room
	(*TbChatList)(nil),                 // 19: tcaplusservice.tb_chat_list
	(*TbFriendList)(nil),               // 20: tcaplusservice.tb_friend_list
	(*TbMailList)(nil),                 // 21: tcaplusservice.tb_mail_list
	(*TbPlayerOrder)(nil),              // 22: tcaplusservice.tb_player_order
	(*TbBattleRecordBrief)(nil),        // 23: tcaplusservice.tb_battle_record_brief
	(*TbBattleRecord)(nil),             // 24: tcaplusservice.tb_battle_record
	(*TbBattleRoundRecord)(nil),        // 25: tcaplusservice.tb_battle_round_record
	(*TbCreditRecord)(nil),             // 26: tcaplusservice.tb_credit_record
	(*TbReportCredit)(nil),             // 27: tcaplusservice.tb_report_credit
	(*TbCreditExpRecord)(nil),          // 28: tcaplusservice.tb_credit_exp_record
	(*TbGuild)(nil),                    // 29: tcaplusservice.tb_guild
	(*TbGuildname)(nil),                // 30: tcaplusservice.tb_guildname
	(*TbGuildApplyList)(nil),           // 31: tcaplusservice.tb_guild_apply_list
	(*TbPlayerGuildInviteList)(nil),    // 32: tcaplusservice.tb_player_guild_invite_list
	(*TbPlayerGuildRefuseList)(nil),    // 33: tcaplusservice.tb_player_guild_refuse_list
	(*TbPlayerTag)(nil),                // 34: tcaplusservice.tb_player_tag
	(*TbPlayerTagResult)(nil),          // 35: tcaplusservice.tb_player_tag_result
	(*TbFriendShare)(nil),              // 36: tcaplusservice.tb_friend_share
	(*TbGameInfo)(nil),                 // 37: tcaplusservice.tb_game_info
	(*TbExcellentMomentList)(nil),      // 38: tcaplusservice.tb_excellent_moment_list
	(*TbGroupShortInfo)(nil),           // 39: tcaplusservice.tb_group_short_info
	(*TbNegativeCompensateRecord)(nil), // 40: tcaplusservice.tb_negative_compensate_record
	nil,                                // 41: tcaplusservice.tb_player.DataEntry
}
var file_table_proto_depIdxs = []int32{
	41, // 0: tcaplusservice.tb_player.data:type_name -> tcaplusservice.tb_player.DataEntry
	1,  // [1:1] is the sub-list for method output_type
	1,  // [1:1] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_table_proto_init() }
func file_table_proto_init() {
	if File_table_proto != nil {
		return
	}
	file_tcaplusservice_optionv1_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_table_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TbKeyValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_table_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TbPlayer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_table_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TbAccountOnline); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_table_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TbRoleOnline); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_table_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TbOpenid); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_table_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TbRoleBriefInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_table_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TbGamename); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_table_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TbRoleOnlineCnt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_table_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TbWhiteList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_table_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TbGlobalId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_table_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TbRegCnt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_table_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TbRoleExt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_table_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TbMailCompensation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_table_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TbActivity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_table_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TbLastGameResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_table_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TbLastGameTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_table_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TbPlayerStatistic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_table_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TbGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_table_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TbRoom); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_table_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TbChatList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_table_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TbFriendList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_table_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TbMailList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_table_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TbPlayerOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_table_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TbBattleRecordBrief); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_table_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TbBattleRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_table_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TbBattleRoundRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_table_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TbCreditRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_table_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TbReportCredit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_table_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TbCreditExpRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_table_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TbGuild); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_table_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TbGuildname); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_table_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TbGuildApplyList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_table_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TbPlayerGuildInviteList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_table_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TbPlayerGuildRefuseList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_table_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TbPlayerTag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_table_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TbPlayerTagResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_table_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TbFriendShare); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_table_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TbGameInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_table_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TbExcellentMomentList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_table_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TbGroupShortInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_table_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TbNegativeCompensateRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_table_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   42,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_table_proto_goTypes,
		DependencyIndexes: file_table_proto_depIdxs,
		MessageInfos:      file_table_proto_msgTypes,
	}.Build()
	File_table_proto = out.File
	file_table_proto_rawDesc = nil
	file_table_proto_goTypes = nil
	file_table_proto_depIdxs = nil
}
